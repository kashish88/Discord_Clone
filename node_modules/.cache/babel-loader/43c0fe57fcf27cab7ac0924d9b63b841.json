{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\project1\\\\src\\\\App2.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App2.css';\nimport Header1 from './components/Header1';\nimport Figure from './components/Figure';\nimport WrongLetter from './components/WrongLetter';\nimport Word from './components/Word';\nimport Notification from './components/Notification';\nimport Popup from './components/Popup';\nimport { showNotification as show } from './helpers/helpers';\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\nlet playable = true;\nconst correctLetters = [];\nconst wrongLetters = [];\n\nfunction App2() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            //  showNotification();\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(wrongLetters => [...wrongLetters, letter]); //  updateWrongLettersEl();\n          } else {\n            //showNotification();\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Figure, {\n    wrongLetters: wrongLetters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WrongLetter, {\n    wrongLetters: wrongLetters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Word, {\n    selectedWord: selectedWord,\n    correctLetters: correctLetters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Popup, {\n    correctLetters: correctLetters,\n    wrongLetters: wrongLetters,\n    selectedWord: selectedWord,\n    setPlayable: setPlayable,\n    playAgain: playAgain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    showNotification: showNotification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App2;","map":{"version":3,"sources":["C:/Users/DELL/project1/src/App2.js"],"names":["React","useState","useEffect","Header1","Figure","WrongLetter","Word","Notification","Popup","showNotification","show","words","selectedWord","Math","floor","random","length","playable","correctLetters","wrongLetters","App2","setPlayable","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport './App2.css';\r\nimport Header1 from './components/Header1';\r\nimport Figure from './components/Figure';\r\nimport WrongLetter from './components/WrongLetter';\r\nimport Word from './components/Word';\r\nimport Notification from './components/Notification';\r\nimport Popup from './components/Popup';\r\n\r\nimport {showNotification as show}  from './helpers/helpers';\r\nconst words=['application','programming','interface','wizard'];\r\nlet selectedWord=words[Math.floor(Math.random()*words.length)];\r\nlet playable=true;\r\n\r\n\r\nconst correctLetters=[];\r\nconst wrongLetters=[];\r\nfunction App2() {\r\n    const [playable,setPlayable]=useState(true);\r\n    const [correctLetters,setCorrectLetters]=useState([]);\r\n    const [wrongLetters,setWrongLetters]=useState([]);\r\n    const [showNotification,setShowNotification]=useState(false);\r\n    useEffect(()=>{\r\n           const handleKeydown=event=>{\r\n               const {key,keyCode}=event;\r\n \r\n                if (playable&&keyCode >= 65 && keyCode <= 90) {\r\n                    const letter = key.toLowerCase();\r\n        \r\n                    if (selectedWord.includes(letter)) {\r\n                        if (!correctLetters.includes(letter)) {\r\n                            setCorrectLetters(currentLetters=>[...currentLetters,letter])\r\n         \r\n                        } else {\r\n                          //  showNotification();\r\n                          show(setShowNotification);\r\n                        }\r\n                    } else {\r\n                        if (!wrongLetters.includes(letter)) {\r\n                            setWrongLetters(wrongLetters=>[...wrongLetters,letter])\r\n                          //  updateWrongLettersEl();\r\n                        } else {\r\n                            //showNotification();\r\n                            show(setShowNotification);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            window.addEventListener('keydown',handleKeydown );\r\n            return ()=>window.removeEventListener('keydown',handleKeydown)\r\n    },[correctLetters,wrongLetters,playable]);\r\n    \r\n    function playAgain(){\r\n        setPlayable(true);\r\n\r\n        setCorrectLetters([]);\r\n        setWrongLetters([]);\r\n        const random=Math.floor(Math.random()*words.length);\r\n        selectedWord=words[random];\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header1 />\r\n            <div className=\"game-container\">\r\n            <Figure  wrongLetters={wrongLetters} />\r\n            <WrongLetter wrongLetters={wrongLetters} />\r\n            <Word selectedWord ={selectedWord} correctLetters={correctLetters}/>\r\n            \r\n            </div>\r\n            <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\r\n            <Notification showNotification={showNotification} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App2\r\n"]},"metadata":{},"sourceType":"module"}